# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  dockerImageName: 'ifejesuaj/test-dees:$(Build.BuildId)'
  dockerRegistryServiceConnection: 'Docker-Login'

steps:
- task: NuGetToolInstaller@1
  displayName: 'Install NuGet CLI'

- task: NuGetCommand@2
  displayName: 'Restore NuGet Packages'
  inputs:
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: 'Build Solution'
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Run Unit Tests'
  inputs:
    command: 'test'
    projects: '**/*[Tt]est/*.csproj'
    arguments: '--configuration  $(BuildConfiguration)'
    testRunTitle: 'Unit-Test'

- task: DotNetCoreCLI@2
  displayName: 'Publish Artifacts'
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Build Artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'

- task: Docker@2
  displayName: 'Login to Docker Hub'
  inputs:
    command: 'login'
    containerRegistry: '$(dockerRegistryServiceConnection)'

- task: Docker@2
  displayName: 'Build and Push Docker Image'
  inputs:
    command: 'buildAndPush'
    repository: '***/test-dees'
    dockerfile: '**/Dockerfile'
    buildContext: '$(Build.ArtifactStagingDirectory)'
    containerRegistry: '$(dockerRegistryServiceConnection)'
    tags: |
      latest
